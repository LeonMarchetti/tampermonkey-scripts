{
	// Place your tampermonkey workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Userscript": {
		"prefix": "userscript",
		"scope": "javascript",
		"body": [
			"// ==UserScript==",
			"// @name         $1",
			"// @namespace    http://tampermonkey.net/",
			"// @version      0.0.0",
			"// @description  $2",
			"// @author       LeonAM",
			"// @match        *://*/*",
			"// @require      file://<PATH>/${TM_FILENAME}",
			"// @grant        GM_info",
			"// ==/UserScript==",
			"",
			"(function () {",
			"    'use strict';",
			"",
			"    console.log(`Running UserScript \"${GM_info.script.name}\"`);",
			"",
			"    $0",
			"})();",
			"",
		],
		"description": "New Userscript template",
	},
	"Changelog": {
		"prefix": "changelog",
		"scope": "markdown",
		"body": [
			"## [$1] - ${CURRENT_DATE}-${CURRENT_MONTH}-${CURRENT_YEAR}",
			"",
			"### $2",
			"",
			"- $0",
		],
		"description": "Description",
	},
	"Changelog Section": {
		"prefix": "section",
		"body": [
			"### $1",
			"",
			"- $0",
		]
	},
	"KeyUp" : {
		"prefix": "keyup",
		"scope": "javascript",
		"body": [
			"document.addEventListener(\"keyup\", e => {",
			"\tvar alt = e.altKey;",
			"\tvar ctrl = e.ctrlKey;",
			"\tvar shift = e.shiftKey;",
			"",
			"\tif (ctrl && alt && shift) {",
			"\t\tswitch (e.code) {",
			"\t\t\tcase \"Key\": break;",
			"\t\t}",
			"\t}",
			"});"
		],
		"description": "Adds a keyup event listener to listen for keystrokes"
	},
}